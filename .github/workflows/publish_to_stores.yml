name: Publish VSX/VSCE

on:
    release:
      types: [published]


permissions:
  contents: read
  
jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    outputs:
      packageName: ${{ steps.setup.outputs.packageName }}
      tag: ${{ steps.setup-tag.outputs.tag }}
      version: ${{ steps.setup-tag.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: |
            npm i
            npm i @vscode/vsce

      - name: Setup package path
        id: setup
        run: echo "::set-output name=packageName::$(node -e "console.log(require('./package.json').name + '-' + require('./package.json').version + '.vsix')")"

      - name: Package
        run: |
          npx vsce package --out ${{ steps.setup.outputs.packageName }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.setup.outputs.packageName }}
          path: ./${{ steps.setup.outputs.packageName }}
          if-no-files-found: error

      - name: Setup tag
        id: setup-tag
        run: |
          $version = (Get-Content ./package.json -Raw | ConvertFrom-Json).version
          Write-Host "tag: release/$version"
          Write-Host "::set-output name=tag::release/$version"
          Write-Host "::set-output name=version::$version"
        shell: pwsh

  publishMS:
    name: Publish to VS marketplace
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.packageName }}
      - name: Publish to VS marketplace
        run: npx vsce publish --packagePath ./${{ needs.package.outputs.packageName }} -p ${{ secrets.VSCE_PAT }}

  publishOVSX:
    name: Publish to Open VSX
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.packageName }}
      - name: Publish to Open VSX
        run: npx ovsx publish ./${{ needs.package.outputs.packageName }} -p ${{ secrets.OVSX_PAT }}
